<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <title><%= title %></title>
    <style>
        :root {
            --clr-white: #fff;
            --clr-black: #000;
            --clr-gray: #f8f8f8;
            --clr-background: #fff;
            --clr-accent: #f8f8f8;
            --clr-text: #000;
            --clr-link: #6b6b6b;
            --clr-green: #228B22;
            --clr-red: #B22222;
            --clr-yellow: #DAA520;
            --clr-blue: #1E90FF;
            --clr-teal: #008080;
            --clr-purple: #800080;
            --clr-orange: #FF8C00;
        }

        @media (prefers-color-scheme: dark) {
            :root {
                --clr-white: #d0d0d0;
                --clr-black: #1d1d1d;
                --clr-gray: #272727;
                --clr-background: #1d1d1d;
                --clr-accent: #272727;
                --clr-text: #d0d0d0;
                --clr-link: #a1a1a1;
                --clr-green: #32CD32;
                --clr-red: #FF6347;
                --clr-yellow: #FFD700;
                --clr-blue: #1E90FF;
                --clr-teal: #20B2AA;
                --clr-purple: #9370DB;
                --clr-orange: #FF8C00;
            }
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background-color: var(--clr-background);
            font-family: 'Montserrat', sans-serif;
            line-height: 1.625;
            color: var(--clr-text);
        }

        body::before, body::after {
            content: '';
            position: fixed;
            top: 0;
            bottom: 0;
            width: 1rem;
            background-color: var(--clr-accent);
            z-index: -1;
            transition: left 0.3s, right 0.3s;
        }

        body::before{
            left: 50%;
            transform: translateX(-50%);
        }

        body::after{
            right: 50%;
            transform: translateX(50%);
        }

        body.success::before {
            left: 0
        }

        body.success::after {
            right: 0;
        }

        #login {
            display: flex;
            flex-direction: row;
            position: relative;
            gap: 1rem;
            padding: 2rem;
            min-width: 300px;
            border: 1rem solid var(--clr-accent);
            background-color: var(--clr-background);
            transition: border-color 0.3s;
        }

        main {
            display: flex;
            flex-direction: column;
            position: relative;
            gap: 1rem;
        }

        #login[data-error]::after {
            content: attr(data-error);
            display: block;
            padding: 0.5rem;
            background-color: var(--clr-accent);
            color: var(--clr-text);
            font-family: inherit;
            font-size: 1rem;
            text-align: center;
            position: absolute;
            top: 0;
            left: -1rem;
            right: -1rem;
            transform: translateY(-100%);
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-tools {
            display: flex;
            justify-content: space-between;
            gap: 1rem;
        }

        input:not([type="submit"]), select {
            padding: 0.5rem;
            font-size: 1rem;
            border: 5px solid var(--clr-accent);
            background-color: var(--clr-background);
            font-family: inherit;
            color: inherit;
            transition: border-color 0.3s;
            /* Reset all browser styling */
            appearance: none;
            border-radius: 0;
            outline: none;
        }

        select {
            cursor: pointer;
            position: relative;
        }

        button, .login-method {
            padding: 0.5rem;
            font-size: 1rem;
            border: 5px solid var(--clr-accent);
            background-color: var(--clr-accent);
            color: var(--clr-text);
            cursor: pointer;
            font-family: inherit;
            transition: background-color 0.3s;
        }

        button:hover, .login-method:hover {
            background-color: var(--clr-background);
        }

        .method-group {
            display: flex;
            flex-direction: row;
            gap: 1rem;
        }

        main + aside {
            padding-left: 1rem;
            border-left: 1rem solid var(--clr-accent);
        }

        main + aside > .method-group {
            flex-direction: column;
        }

        .login-method {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 3rem;
            height: 3rem;
        }

        dialog[open] {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            padding: 2rem;
            min-width: 300px;
            max-width: 500px;
            border: 1rem solid var(--clr-accent);
            background-color: var(--clr-background);
            color: inherit;
        }

        a {
            font-family: inherit;
            color: var(--clr-link);
            text-decoration: underline;
            text-decoration-color: var(--clr-link);
            font-variation-settings: "wght" 500;
            transition: font-variation-settings 0.3s;
        }

        a:hover {
            font-variation-settings: "wght" 700;
        }

        footer {
            display: flex;
            justify-content: right;
            align-items: center;
            gap: 0.5rem;
            position: absolute;
            bottom: 1rem;
            left: 1rem;
            right: 1rem;
            font-size: 1rem;
            color: var(--clr-link);
        }

        i {
            vertical-align: middle;
        }

        * {
            box-sizing: border-box;
        }

        *:focus {
            outline: none;
        }
    </style>
</head>
<body>
    <form id="login">
        <% if (initialEndpoint) { %>
            <main>
                <h1>
                    <%= title %>
                </h1>
                <span class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" name="username" required>
                </span>
                <span class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" name="password" required>
                </span>
                <% if (endpoints.length > 1) { %>
                    <span class="form-group">
                        <label for="endpoint">Endpoint</label>
                        <select id="endpoint" name="endpoint">
                            <% endpoints.forEach(function(endpoint) { %>
                                <option value="<%= endpoint.loginURL %>"><%= endpoint.displayName %></option>
                            <% }); %>
                        </select>
                    </span>
                <% } %>
                <span class="form-tools">
                    <button type="button" onclick="document.getElementById('informationPopup').showModal()">Help</button>
                    <button type="submit" style="flex: 1;">Login</button>
                </span>
            </main>
        <% } %>
        <% if (strategies.length > 1) { %>
            <aside>
                <% if (!initialEndpoint) { %>
                    <h1>
                        <%= title %>
                    </h1>
                <% } %>
                <div class="method-group">
                    <% strategies.forEach(function(strategy) { %>
                        <div class="login-method" title="Login with <%= strategy.displayName %>">
                            <a href="<%= strategy.loginURL %>">
                                <i class="fa <%= strategy.fontAwesomeIcon %>"></i>
                            </a>
                        </div>
                    <% }); %>
                </div>
            </aside>
        <% } %>
    </form>
    <dialog id="informationPopup">
        <h2>What's this?</h2>
        <p>
            Hidden behind this gate is a secret. To unlock it, you must provide the correct credentials.
        </p>
        <p>
            Are you the administrator? If so, you should know the username and password.<br/>
            Not the administrator but need in? <%- admin_text %>
        </p>
        <form method="dialog">
            <button type="submit">Got it!</button>
        </form>
    </dialog>
    <footer>
        <i class="fab fa-github"></i> <a href="https://github.com/pixnyb" target="_blank">pixnyb</a>
    </footer>
</body>

<script>
    const form = document.getElementById('login');
    const endpoint = document.getElementById('endpoint');
    let url = new URL("<%- initialEndpoint %>", window.location.href);

    const setError = message => {
        form.setAttribute('data-error', message);
        form.addEventListener('input', function() {
            form.removeAttribute('data-error');
            form.removeEventListener('input', this);
        });
    };

    // If there's an error message in the URL, display it
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('error')) {
        setError(urlParams.get('error'));
        window.history.replaceState({}, document.title, window.location.pathname);
    }

    if (endpoint)
        endpoint.addEventListener('change', () => {
            url = new URL(endpoint.value, window.location.href);
        });

    form.addEventListener('submit', async event => {
        event.preventDefault();
        if (!form.checkValidity()) return;

        try {
            const response = await fetch(url, {
                method: 'POST',
                body: new URLSearchParams(new FormData(form)),
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            if (!response.ok)
                throw new Error(await response.text());

            document.body.classList.add('success');
            setTimeout(() => window.location.reload(), 400);
        } catch (error) {
            console.error(error);
            setError(error.message || 'An error occurred while trying to log in. Please try again later.');
        }
    });
</script>
</html>