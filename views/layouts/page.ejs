<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="Authentication Proxy" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%- title %></title>
    <link rel="stylesheet" href="https://roelc.me/assets/css/main.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <meta name="robots" content="noindex, nofollow">
    <%- defineContent('additional_head') %>
    <style>
        main {
            margin: auto !important;
            align-items: center;
        }

        .method-group {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        form + .method-group {
            border-left: 1rem solid var(--clr-accent);
            flex-direction: column;
            padding-left: 1rem;
        }

        @media screen and (max-width: 600px) {
            .method-group {
                flex-direction: row;
                justify-content: flex-start;
            }

            form + .method-group {
                border: 0;
                border-top: 1rem solid var(--clr-accent);
                padding: 0;
                padding-top: 1rem;
            }
        }

        .method-group__item {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 3rem;
            height: 3rem;
        }

        a:has(.method-group__item) {
            text-decoration: none;
            color: inherit;
        }

        dd {
            margin-left: 1rem;
        }

        dt + dd {
            margin-top: 0.5rem;
        }

        dd + dt {
            margin-top: 1rem;
        }

        .row {
            display: inline-flex;
            flex-flow: row wrap;
            gap: 1rem;
            width: 100%;
            align-items: flex-start;
        }

        .row > * {
            flex: 1;
        }

        pre {
            margin: 0;
        }

        pre, code {
            overflow-x: auto;
            white-space: pre-wrap;
            word-wrap: break-word;
        }

        /* style the error message to show up and then move out of the window */
        .error {
            position: fixed;
            top: 1rem;
            left: 1rem;
            z-index: 1000;
            animation: fade-in .3s forwards;
        }

        .fade-out {
            animation: fade-out .3s forwards;
        }

        @keyframes fade-in {
            0% {
                opacity: 0;
            }
            100% {
                opacity: 1;
            }
        }

        @keyframes fade-out {
            0% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <main>
        <div class="content">
            <%- body %>
        </div>
    </main>
    <%- include('../partials/footer.ejs') %>
    <template id="error-template">
        <div class="card error">
            <p><b>Error: </b><span class="error__message"></span></p>
        </div>
    </template>
    <%- script %>
    <script>
        const url = new URL(window.location.href);
        const error = url.searchParams.get('error');
        if (error) {
            const errorTemplate = document.getElementById('error-template');
            const errorElement = errorTemplate.content.cloneNode(true);
            errorElement.querySelector('.error__message').textContent = error;
            document.body.appendChild(errorElement);

            const errorCard = document.querySelector('.error');

            setTimeout(() => {
                document.querySelector('.error').classList.add('fade-out');
                setTimeout(() => {
                    document.querySelector('.error').remove();
                }, 300);
            }, 5000);
        }
    </script>
</body>
</html>
