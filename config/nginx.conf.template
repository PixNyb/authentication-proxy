worker_processes 1;

events {
    worker_connections 1024;
}

http {
    map $http_x_forwarded_for $real_ip {
        '' $remote_addr;
        default $http_x_forwarded_for;
    }

    map $http_upgrade $connection_upgrade {
        default "upgrade";
        '' close;
    }

    server {
        listen 80;
        default_type text/html;
        error_log /var/log/nginx/error.log debug;

        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_buffering off;

        client_max_body_size 32g;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;

        send_timeout 600;

        location $API_PATH/login {
            alias /usr/share/nginx/html/login.html;
        }

        location $API_PATH/auth {
            proxy_pass http://127.0.0.1:3000/auth;
        }

        location $API_PATH/validate {
            proxy_pass http://127.0.0.1:3000/validate;
        }

        location $API_PATH/refresh {
            proxy_pass http://127.0.0.1:3000/refresh;
        }

        location $API_PATH/metrics {
            proxy_pass http://127.0.0.1:3000/metrics;
        }

        location / {
            auth_request $API_PATH/validate;
            auth_request_set $auth_status $upstream_status;

            error_page 401 = $API_PATH/login?uri=$request_uri;
            error_page 403 = $API_PATH/refresh?uri=$request_uri;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Preserve the original Host header passed by the client
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $real_ip;
            proxy_set_header X-Forwarded-For $real_ip;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_pass http://$UPSTREAM_HOST:$UPSTREAM_PORT;
        }
    }
}